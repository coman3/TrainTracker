
@{
    ViewBag.Title = "Map";
}
<h2>Chat</h2>
<div class="container">
    <div id="map" style="width: 1248px; height: 768px;"></div>
</div>

<h2>Map</h2>

@section scripts{
    <script src="~/Scripts/JQuery.Easing.js"></script>
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBblUvtCvX4S99whslm-TsWyjVMdlM2eBo"></script>
    <script src="~/Scripts/MarkerAnimiate.js"></script>
    <script src="~/Scripts/SlidingMarker.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        var map;
        var trainHub = null;
        var markers = [];
        var poly = null;
        var delay = 1000;
        var lastRequestTime;
        function addMarker(id, location) {
            var marker = new SlidingMarker({
                position: location,
                duration: delay,
                map: map,
                easing: "jswing"
            });
            markers[id] = marker;
        }

        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for(var key in markers) {
                if (markers.hasOwnProperty(key)) {
                    var value = markers[key];
                    value.setMap(map);
                }
            }
        }

        // Removes the markers from the map, but keeps them in the array.
        function clearMarkers() {
            setMapOnAll(null);
        }

        // Deletes all markers in the array by removing references to them.
        function deleteMarkers() {
            clearMarkers();
            markers = [];
        }

        $(function () {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -34.397, lng: 150.644 },
                zoom: 8
            });
            // Reference the auto-generated proxy for the hub.
            trainHub = $.connection.trainHub;
            // Create a function that the hub can call back to display messages.
            trainHub.client.trainUpdated = function (train) {
                if (train == null || train.Position == null) return;
                if (markers.hasOwnProperty(train.Id)) {
                    markers[train.Id].setPosition({ lat: train.Position.Latitude, lng: train.Position.Longitude });
                } else {
                    addMarker(train.Id, { lat: train.Position.Latitude, lng: train.Position.Longitude });
                }
                //map.setCenter({ lat: trainPos.Latitude, lng: trainPos.Longitude });
            };
            $.connection.hub.start().done(function () {

            });
        });
    </script>
}
